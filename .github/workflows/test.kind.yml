name: Kind Cluster Testing

"on":
  pull_request:
    branches: [main, master]
    paths:
      - '.github/workflows/test.kind.yml'
  workflow_dispatch:

jobs:
  kind-test:
    name: Test with Kind Cluster
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Kind cluster
        uses: helm/kind-action@v1.10.0
        with:
          cluster_name: test-cluster
          wait: 60s

      - name: Verify cluster with kubectl
        run: |
          # Verify that kubectl can communicate with the cluster
          echo "Checking cluster info..."
          kubectl cluster-info

          echo "Checking nodes..."
          kubectl get nodes

          echo "Checking namespaces..."
          kubectl get namespaces

          echo "Checking pods in kube-system..."
          kubectl get pods -n kube-system

          echo "Cluster verification completed successfully!"

      - name: Install in-cluster container registry
        run: |
          echo "Installing in-cluster container registry..."
          
          # Create a simple registry deployment
          kubectl run registry --image=registry:2.8.3 --port=5000
          kubectl expose pod registry --port=5000 --target-port=5000
          
          # Wait for registry to be ready
          kubectl wait --for=condition=ready pod/registry --timeout=120s
          
          echo "Registry installed successfully!"
          kubectl get pods,svc | grep registry
          
          # Set up port forwarding for registry access in background
          kubectl port-forward pod/registry 5000:5000 &
          sleep 5
          
          # Test registry connectivity
          curl -f "http://localhost:5000/v2/" && echo "Registry is accessible!"

      - name: Set up Docker Buildx with Kubernetes driver
        run: |
          echo "Setting up Docker Buildx with Kubernetes driver..."
          
          # Create a buildx builder using the Kubernetes driver
          docker buildx create --driver kubernetes \
            --driver-opt namespace=default \
            --name k8s-builder
          
          # Use the new builder
          docker buildx use k8s-builder
          
          echo "Kubernetes buildx driver configured successfully!"
          docker buildx ls

      - name: Build and push web application to in-cluster registry
        run: |
          echo "Building and pushing web/Dockerfile to in-cluster registry using Kubernetes buildx driver..."
          
          # Build and push using the Kubernetes buildx driver
          docker buildx build --builder k8s-builder \
            --tag localhost:5000/catalyst-web:test \
            --file web/Dockerfile \
            --push \
            web/
          
          echo "Web application build and push completed successfully using Kubernetes buildx driver!"
          
          # Verify the image was pushed successfully
          echo "Verifying image push to registry..."
          curl -f "http://localhost:5000/v2/catalyst-web/tags/list" && \
            echo "Image successfully pushed and verified in registry!" || \
            echo "Warning: Could not verify image in registry, but push command succeeded"

      - name: Test basic kubectl operations
        run: |
          # Create a test namespace
          kubectl create namespace test-namespace

          # Verify the namespace was created
          kubectl get namespace test-namespace

          # Create a simple pod
          kubectl run test-pod --image=nginx:alpine \
            --restart=Never -n test-namespace

          # Wait for pod to be ready
          kubectl wait --for=condition=Ready pod/test-pod \
            -n test-namespace --timeout=60s

          # Verify the pod is running
          kubectl get pods -n test-namespace

          # Clean up
          kubectl delete namespace test-namespace

          echo "Basic kubectl operations test completed successfully!"
