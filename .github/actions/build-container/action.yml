name: Build Container
description: Build and push Docker container image to registry

inputs:
  registry:
    description: 'Container registry URL'
    required: true
    default: 'ghcr.io'
  image:
    description: 'Image name (without registry)'
    required: true
  platforms:
    description: 'Comma-separated list of platforms to build for'
    required: false
    default: 'linux/amd64'
  context:
    description: 'Build context path'
    required: false
    default: './web'
  dockerfile:
    description: 'Path to Dockerfile'
    required: false
    default: './web/Dockerfile'
  target:
    description: 'Target stage to build'
    required: false
  push:
    description: 'Whether to push the built image'
    required: false
    default: 'true'

outputs:
  image:
    description: 'Full image name with tags'
    value: ${{ steps.meta.outputs.tags }}
  digest:
    description: 'Image digest'
    value: ${{ steps.build.outputs.digest }}

runs:
  using: 'composite'
  steps:
    - name: Set lowercase image name
      shell: bash
      run: |
        echo "IMAGE_NAME=$(echo '${{ inputs.image }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      id: setup-buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker cache mounts
      uses: actions/cache@v4
      id: cache
      with:
        path: cache-mount
        key: docker-cache-mount-${{ github.repository }}-${{ github.sha }}
        restore-keys: |
          docker-cache-mount-${{ github.repository }}-
        save-always: true
        # Cache for one week (7 days)
        retention-days: 7

    - name: Restore Docker cache mounts
      uses: reproducible-containers/buildkit-cache-dance@v3
      with:
        builder: ${{ steps.setup-buildx.outputs.name }}
        cache-dir: cache-mount
        dockerfile: ${{ inputs.dockerfile }}
        skip-extraction: ${{ steps.cache.outputs.cache-hit }}

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=ref,event=tag
          type=raw,value=latest,enable={{is_default_branch}}
          type=sha,prefix={{branch}}

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        target: ${{ inputs.target }}
        push: ${{ inputs.push }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: ${{ inputs.platforms }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate artifact attestation
      if: inputs.push == 'true'
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ inputs.registry }}/${{ env.IMAGE_NAME }}
        subject-digest: ${{ steps.build.outputs.digest }}
        push-to-registry: true