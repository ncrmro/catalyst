# Default values for nextjs.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ""
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# Development image configuration for helm tests
developmentImage:
  repository: node
  pullPolicy: IfNotPresent
  # tag defaults to Chart.AppVersion if not specified

# Unit test configuration for helm tests using development image
unitTests:
  # Enable unit tests (disabled by default)
  enabled: false
  
  # Additional environment variables for unit tests
  env: []
  # Example:
  # env:
  #   - name: DATABASE_URL
  #     value: "mock://localhost"
  
  # Resource limits for unit test pod
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  
  # Node selector for unit test pod
  nodeSelector: {}
  
  # Tolerations for unit test pod
  tolerations: []

# E2E test configuration for helm tests using development image
e2eTests:
  # Enable E2E tests (disabled by default)
  enabled: false
  
  # Run only smoke tests by default (recommended for Helm tests)
  smokeOnly: true
  
  # Alternative: specify custom test files to run
  testFiles: []
  # Example:
  # testFiles:
  #   - "__tests__/e2e/smoke.spec.ts"
  #   - "__tests__/e2e/teams.spec.ts"
  
  # Additional environment variables for E2E tests
  env: []
  # Example:
  # env:
  #   - name: CUSTOM_VAR
  #     value: "custom-value"
  
  # Resource limits for E2E test pod
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  
  # Node selector for E2E test pod
  nodeSelector: {}
  
  # Tolerations for E2E test pod
  tolerations: []

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# NextJS specific configuration
nextjs:
  # Environment variables for NextJS
  env:
    - name: NODE_ENV
      value: "production"
    - name: PORT
      value: "3000"
  # Additional environment variables from secrets or configmaps
  envFrom: []

# PostgreSQL configuration
postgresql:
  # Enable PostgreSQL subchart
  enabled: true
  auth:
    # PostgreSQL username
    username: nextjs
    # PostgreSQL database name  
    database: nextjs
    # PostgreSQL password will be auto-generated if not specified
    password: ""
    # Existing secret containing PostgreSQL password
    existingSecret: "nextjs-database"
    # Key in existing secret containing PostgreSQL password
    secretKeys:
      adminPasswordKey: postgres-password
      userPasswordKey: password
  # Primary PostgreSQL configuration
  primary:
    persistence:
      enabled: true
      size: 1Gi

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 3000

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /api/health/readiness
    port: http
readinessProbe:
  httpGet:
    path: /api/health/readiness
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
