{{- if .Values.postgresql.enabled }}
{{- $secret := (lookup "v1" "Secret" .Release.Namespace (required "postgresql.auth.existingSecret is required" .Values.postgresql.auth.existingSecret)).data | default dict }}
{{- $postgresqlPassword := (index $secret "password") | default (randAlphaNum 16 | b64enc) | b64dec }}
{{- $postgresqlAdminPassword := (index $secret "postgres-password") | default (randAlphaNum 16 | b64enc) | b64dec }}
{{- $host := printf "%s.%s.svc.cluster.local" (printf "%s-%s" .Release.Name "postgresql") .Release.Namespace }}
{{- $port := "5432" }}
{{- $username := .Values.postgresql.auth.username }}
{{- $database := .Values.postgresql.auth.database }}
{{- $databaseUrl := printf "postgresql://%s:%s@%s:%s/%s" $username $postgresqlPassword $host $port $database }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ required "postgresql.auth.existingSecret is required" .Values.postgresql.auth.existingSecret }}
  labels:
    {{- include "nextjs.labels" . | nindent 4 }}
type: Opaque
data:
  DATABASE_URL: {{ $databaseUrl | b64enc }}
  {{ .Values.postgresql.auth.secretKeys.userPasswordKey }}: {{ $postgresqlPassword | b64enc }}
  {{ .Values.postgresql.auth.secretKeys.adminPasswordKey }}: {{ $postgresqlAdminPassword | b64enc }}
{{- end }}